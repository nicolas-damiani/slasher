//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdminServerProgram.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddUserToSystem", ReplyAction="http://tempuri.org/IService/AddUserToSystemResponse")]
        void AddUserToSystem(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddUserToSystem", ReplyAction="http://tempuri.org/IService/AddUserToSystemResponse")]
        System.Threading.Tasks.Task AddUserToSystemAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRegisteredUsers", ReplyAction="http://tempuri.org/IService/GetRegisteredUsersResponse")]
        Slasher.Entities.User[] GetRegisteredUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRegisteredUsers", ReplyAction="http://tempuri.org/IService/GetRegisteredUsersResponse")]
        System.Threading.Tasks.Task<Slasher.Entities.User[]> GetRegisteredUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteUser", ReplyAction="http://tempuri.org/IService/DeleteUserResponse")]
        void DeleteUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteUser", ReplyAction="http://tempuri.org/IService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ModifyUser", ReplyAction="http://tempuri.org/IService/ModifyUserResponse")]
        void ModifyUser(string newName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ModifyUser", ReplyAction="http://tempuri.org/IService/ModifyUserResponse")]
        System.Threading.Tasks.Task ModifyUserAsync(string newName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddStatistic", ReplyAction="http://tempuri.org/IService/AddStatisticResponse")]
        void AddStatistic(Slasher.Entities.MatchPlayerStatistic statistic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddStatistic", ReplyAction="http://tempuri.org/IService/AddStatisticResponse")]
        System.Threading.Tasks.Task AddStatisticAsync(Slasher.Entities.MatchPlayerStatistic statistic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserStatistics", ReplyAction="http://tempuri.org/IService/GetUserStatisticsResponse")]
        Slasher.Entities.MatchPlayerStatistic[] GetUserStatistics();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserStatistics", ReplyAction="http://tempuri.org/IService/GetUserStatisticsResponse")]
        System.Threading.Tasks.Task<Slasher.Entities.MatchPlayerStatistic[]> GetUserStatisticsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddScores", ReplyAction="http://tempuri.org/IService/AddScoresResponse")]
        void AddScores(Slasher.Entities.UserScore[] userScores);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddScores", ReplyAction="http://tempuri.org/IService/AddScoresResponse")]
        System.Threading.Tasks.Task AddScoresAsync(Slasher.Entities.UserScore[] userScores);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetHighScores", ReplyAction="http://tempuri.org/IService/GetHighScoresResponse")]
        Slasher.Entities.UserScore[] GetHighScores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetHighScores", ReplyAction="http://tempuri.org/IService/GetHighScoresResponse")]
        System.Threading.Tasks.Task<Slasher.Entities.UserScore[]> GetHighScoresAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : AdminServerProgram.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<AdminServerProgram.ServiceReference1.IService>, AdminServerProgram.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddUserToSystem(string name) {
            base.Channel.AddUserToSystem(name);
        }
        
        public System.Threading.Tasks.Task AddUserToSystemAsync(string name) {
            return base.Channel.AddUserToSystemAsync(name);
        }
        
        public Slasher.Entities.User[] GetRegisteredUsers() {
            return base.Channel.GetRegisteredUsers();
        }
        
        public System.Threading.Tasks.Task<Slasher.Entities.User[]> GetRegisteredUsersAsync() {
            return base.Channel.GetRegisteredUsersAsync();
        }
        
        public void DeleteUser(string username) {
            base.Channel.DeleteUser(username);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(string username) {
            return base.Channel.DeleteUserAsync(username);
        }
        
        public void ModifyUser(string newName) {
            base.Channel.ModifyUser(newName);
        }
        
        public System.Threading.Tasks.Task ModifyUserAsync(string newName) {
            return base.Channel.ModifyUserAsync(newName);
        }
        
        public void AddStatistic(Slasher.Entities.MatchPlayerStatistic statistic) {
            base.Channel.AddStatistic(statistic);
        }
        
        public System.Threading.Tasks.Task AddStatisticAsync(Slasher.Entities.MatchPlayerStatistic statistic) {
            return base.Channel.AddStatisticAsync(statistic);
        }
        
        public Slasher.Entities.MatchPlayerStatistic[] GetUserStatistics() {
            return base.Channel.GetUserStatistics();
        }
        
        public System.Threading.Tasks.Task<Slasher.Entities.MatchPlayerStatistic[]> GetUserStatisticsAsync() {
            return base.Channel.GetUserStatisticsAsync();
        }
        
        public void AddScores(Slasher.Entities.UserScore[] userScores) {
            base.Channel.AddScores(userScores);
        }
        
        public System.Threading.Tasks.Task AddScoresAsync(Slasher.Entities.UserScore[] userScores) {
            return base.Channel.AddScoresAsync(userScores);
        }
        
        public Slasher.Entities.UserScore[] GetHighScores() {
            return base.Channel.GetHighScores();
        }
        
        public System.Threading.Tasks.Task<Slasher.Entities.UserScore[]> GetHighScoresAsync() {
            return base.Channel.GetHighScoresAsync();
        }
    }
}
